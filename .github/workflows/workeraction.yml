name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
          IP="$(ip addr show)"
          test="$(ifconfig)"
          echo $IP $test
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: Get CIDR for actions
        run: |
          cidr=$(curl -s https://api.ipify.org)
          echo "IP=${cidr}" >> $GITHUB_ENV
          echo $IP
          echo $cidr
      - name: install ibmcli and setup ibm login
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud login -q --apikey ${{ secrets.IBMCLOUD_API_KEY }} -r eu-gb
          ibmcloud plugin install vpc-infrastructure
          cidr=$(curl -s https://api.ipify.org)
          test=$(ibmcloud is security-group-rule-add --sg ${{ secrets.SG_ID }} --direction=inbound --protocol=tcp --port-min=22 --port-max=22 --remote=$cidr --output JSON | jq -r '.id')
          echo $test "&" ${cidr} 
          echo "RID=${test}" >> $GITHUB_ENV
          
      - name: Setup SSH config for builders
        env:
          BUILDER_S390X_SSH_HOST: ${{ secrets.BUILDER_S390X_SSH_HOST }}
          BUILDER_S390X_SSH_KEY: ${{ secrets.BUILDER_S390X_SSH_KEY }}
        run: |
          mkdir ~/.ssh
          chmod 700 ~/.ssh

          touch ~/.ssh/id_builder_s390x
          chmod 600 ~/.ssh/id_builder_s390x
          echo "$BUILDER_S390X_SSH_KEY" > ~/.ssh/id_builder_s390x

          touch ~/.ssh/config
          chmod 600 ~/.ssh/config
          cat >~/.ssh/config <<END
          Host builder-s390x
            StrictHostKeyChecking no
            HostName $BUILDER_S390X_SSH_HOST
            User wfuser
            IdentityFile "~/.ssh/id_builder_s390x"
          END

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/s390x
          append: |
            - endpoint: ssh://builder-s390x
              platforms: linux/s390x
      - name: Clean up
        if: success() || failure()
        run: |
          ibmcloud is security-group-rule-delete ${{ secrets.SG_ID }} $RID -f
          echo ${{steps.test.outputs.RID}}
